{
  "version": 3,
  "sources": ["../../Private/Editor/FontWeight.jsx"],
  "sourcesContent": ["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Button, SelectBox } from \"@neos-project/react-ui-components\";\nimport injectNeosProps from \"./Component/injectNeosProps\";\nimport { getFontCollection, getFontWeightConfig } from \"./Helper\";\nimport RangeEditor from \"/_Resources/Static/Packages/Carbon.RangeEditor/RangeEditor.js\";\nimport RadioButton from \"./Component/RadioButton\";\n\nconst defaultOptions = {\n    disabled: false,\n    readonly: false,\n    useCarbonWebfonts: true,\n    placeholder: \"\",\n    choosenFont: \"\",\n    fonts: {},\n};\n\nfunction FontWeight({\n    id,\n    value,\n    commit,\n    options,\n    className,\n    highlight,\n    i18nRegistry,\n    onEnterKey,\n    config,\n    carbonWebfonts,\n}) {\n    const { disabled, readonly, useCarbonWebfonts, placeholder, choosenFont } = {\n        ...defaultOptions,\n        ...config,\n        ...options,\n    };\n\n    const carbonFontSettings = useCarbonWebfonts ? carbonWebfonts : {};\n    const { flat } = getFontCollection({\n        ...carbonFontSettings,\n        ...defaultOptions.fonts,\n        ...config.fonts,\n        ...options.fonts,\n    });\n\n    const [font, setFont] = useState(null);\n    const [fontWeight, setFontWeight] = useState(null);\n    const [type, setType] = useState(null);\n\n    const commitIfChanged = useCallback(\n        (newValue) => {\n            if (newValue !== value) {\n                commit(newValue);\n            }\n        },\n        [value, commit],\n    );\n\n    useEffect(() => {\n        if (font === choosenFont) {\n            return;\n        }\n        if (!choosenFont) {\n            setFont(null);\n            return;\n        }\n        setFont(choosenFont);\n    }, [choosenFont]);\n\n    useEffect(() => {\n        const obj = getFontWeightConfig(font, value, flat);\n        if (!obj) {\n            setFontWeight(null);\n            setType(null);\n            return;\n        }\n        commitIfChanged(obj.value);\n        setType(obj.type);\n        setFontWeight(obj.fontWeight);\n    }, [font]);\n\n    if (!!value && type !== \"variable\" && type !== \"fixed\") {\n        return <RadioButton disabled value={value} highlight={highlight} currentValue={value} />;\n    }\n\n    if (type === \"variable\") {\n        return (\n            <RangeEditor\n                options={fontWeight}\n                id={id}\n                value={value}\n                highlight={highlight}\n                onEnterKey={onEnterKey}\n                commit={commitIfChanged}\n                disabled={disabled}\n                readonly={readonly}\n            />\n        );\n    }\n\n    // Fixed\n    if (!Array.isArray(fontWeight)) {\n        return null;\n    }\n\n    if (fontWeight.length < 4) {\n        return fontWeight.map((weight) => (\n            <RadioButton\n                key={`key-${weight}`}\n                value={weight}\n                highlight={highlight}\n                onChange={commitIfChanged}\n                currentValue={value}\n                disabled={disabled || readonly}\n            />\n        ));\n    }\n\n    const selectBoxOptions = fontWeight.map((weight) => ({\n        label: weight,\n        value: weight,\n    }));\n\n    return (\n        <SelectBox\n            allowEmpty={false}\n            id={id}\n            options={selectBoxOptions}\n            value={value}\n            className={className}\n            onValueChange={commitIfChanged}\n            disabled={disabled}\n            readonly={readonly}\n        />\n    );\n}\n\nexport default injectNeosProps(FontWeight, \"FontWeight\");\n"],
  "mappings": "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",
  "names": ["React"]
}
